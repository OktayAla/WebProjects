// Bu JavaScript dosyası, web sitesindeki tüm dinamik etkileşimleri ve animasyonları yönetir.

document.addEventListener('DOMContentLoaded',function(){initDynamicInteractions()});function initDynamicInteractions(){initMagneticElements();initParallaxEffects();initScrollProgress();initCursorFollower();initRevealTextAnimations();initEnhancedSkillAnimations();initFormAnimations();initScrollTriggeredAnimations()}
function initMagneticElements(){const magneticElements=document.querySelectorAll('.magnetic-element');magneticElements.forEach(element=>{element.addEventListener('mousemove',function(e){const rect=this.getBoundingClientRect();const x=e.clientX-rect.left-rect.width/2;const y=e.clientY-rect.top-rect.height/2;const distance=Math.sqrt(x*x+y*y);const maxDistance=Math.sqrt(rect.width*rect.width+rect.height*rect.height)/2;const strength=15*(1-distance/maxDistance);this.style.transform=`translate(${x * strength / 10}px, ${y * strength / 10}px) rotateX(${y * strength / 50}deg) rotateY(${-x * strength / 50}deg)`});element.addEventListener('mouseleave',function(){this.style.transform=''})})}
function initParallaxEffects(){const parallaxElements=document.querySelectorAll('.parallax-bg');window.addEventListener('scroll',function(){const scrollY=window.scrollY||window.pageYOffset;parallaxElements.forEach(element=>{const speed=element.getAttribute('data-speed')||0.5;element.style.backgroundPositionY=`${scrollY * speed}px`})});document.querySelectorAll('section[id]').forEach(section=>{if(getComputedStyle(section).backgroundImage!=='none'){section.classList.add('parallax-bg');section.setAttribute('data-speed','0.3')}})}

function initScrollProgress(){if(!document.querySelector('.scroll-progress')){const scrollProgress=document.createElement('div');scrollProgress.className='scroll-progress';document.body.appendChild(scrollProgress)}
window.addEventListener('scroll',function(){const scrollTop=document.documentElement.scrollTop||document.body.scrollTop;const scrollHeight=document.documentElement.scrollHeight-document.documentElement.clientHeight;const scrollPercentage=(scrollTop/scrollHeight)*100;document.querySelector('.scroll-progress').style.width=`${scrollPercentage}%`})}
function throttle(func,limit){let lastFunc;let lastRan;return function(){const context=this;const args=arguments;if(!lastRan){func.apply(context,args);lastRan=Date.now()}else{clearTimeout(lastFunc);lastFunc=setTimeout(function(){if((Date.now()-lastRan)>=limit){func.apply(context,args);lastRan=Date.now()}},limit-(Date.now()-lastRan))}}}
function initCursorFollower(){if(!document.querySelector('.cursor-follower')){const cursorFollower=document.createElement('div');cursorFollower.className='cursor-follower';document.body.appendChild(cursorFollower)}
const cursor=document.querySelector('.cursor-follower');document.addEventListener('mousemove',throttle(function(e){cursor.style.left=`${e.clientX}px`;cursor.style.top=`${e.clientY}px`},16));document.querySelectorAll('a, button, .btn, .project-card, .skill').forEach(element=>{element.addEventListener('mouseenter',function(){cursor.style.transform='translate(-50%, -50%) scale(1.5)';cursor.style.background='rgba(138, 43, 226, 0.3)'});element.addEventListener('mouseleave',function(){cursor.style.transform='translate(-50%, -50%) scale(1)';cursor.style.background='rgba(138, 43, 226, 0.2)'})});document.addEventListener('mousedown',function(){cursor.classList.add('clicked')});document.addEventListener('mouseup',function(){cursor.classList.remove('clicked')})}
function initRevealTextAnimations(){const revealTexts=document.querySelectorAll('.reveal-text');const observer=new IntersectionObserver((entries)=>{entries.forEach(entry=>{if(entry.isIntersecting){entry.target.classList.add('visible');const text=entry.target.textContent;let newHtml='';for(let i=0;i<text.length;i++){if(text[i]===' '){newHtml+=' '}else{newHtml+=`<span class="stagger-item" style="transition-delay: ${i * 0.03}s">${text[i]}</span>`}}
entry.target.innerHTML=newHtml}})},{threshold:0.2});revealTexts.forEach(text=>observer.observe(text));document.querySelectorAll('h2.section-title:not(.reveal-text)').forEach(title=>{title.classList.add('reveal-text');observer.observe(title)})}
function initEnhancedSkillAnimations(){const skills=document.querySelectorAll('.skill');skills.forEach(skill=>{skill.setAttribute('data-animated','false')});const observer=new IntersectionObserver((entries)=>{entries.forEach(entry=>{if(entry.isIntersecting){const index=Array.from(skills).indexOf(entry.target);entry.target.style.transitionDelay=`${index * 0.1}s`;entry.target.classList.add('animated');const progressBar=entry.target.querySelector('.progress-bar');if(progressBar){const width=progressBar.style.width||entry.target.querySelector('.skill-percentage').textContent;progressBar.style.width=width;entry.target.setAttribute('data-animated','true')}}})},{threshold:0.2});skills.forEach(skill=>observer.observe(skill));skills.forEach(skill=>{const progressBar=skill.querySelector('.progress-bar');const percentageSpan=skill.querySelector('.skill-percentage');if(progressBar&&percentageSpan){progressBar.style.width=percentageSpan.textContent;progressBar.style.transition='none';skill.setAttribute('data-animated','true')}})}
function initFormAnimations(){const contactForm=document.getElementById('contactForm');const successModal=new bootstrap.Modal(document.getElementById('successModal'));if(contactForm){contactForm.addEventListener('submit',function(e){e.preventDefault();const formData=new FormData(this);fetch('contact.php',{method:'POST',body:formData}).then(response=>response.text()).then(data=>{this.reset();successModal.show();setTimeout(()=>{successModal.hide()},100000)}).catch(error=>{console.error('Error:',error);alert('Mesaj gönderilirken bir hata oluştu.')})})}}
function showPopup(){const popup=document.getElementById('successPopup');if(popup){popup.style.display='flex';setTimeout(()=>{closePopup()},100000)}}
function closePopup(){const popup=document.getElementById('successPopup');if(popup){popup.style.display='none'}}
document.addEventListener('keydown',function(e){if(e.key==='Escape'){closePopup()}});function initScrollTriggeredAnimations(){const observer=new IntersectionObserver((entries)=>{entries.forEach(entry=>{if(entry.isIntersecting){entry.target.classList.add('in-view')}})},{threshold:0.1});document.querySelectorAll('section').forEach(section=>{observer.observe(section)});document.querySelectorAll('.hero h1, .hero p, .about p, .contact h2').forEach(element=>{element.classList.add('scroll-triggered');observer.observe(element)})}